diff --git a/node_modules/@strapi/plugin-users-permissions/server/controllers/user.js b/node_modules/@strapi/plugin-users-permissions/server/controllers/user.js
index f096bd8..73e6de9 100644
--- a/node_modules/@strapi/plugin-users-permissions/server/controllers/user.js
+++ b/node_modules/@strapi/plugin-users-permissions/server/controllers/user.js
@@ -10,6 +10,10 @@ const _ = require('lodash');
 const utils = require('@strapi/utils');
 const { getService } = require('../utils');
 const { validateCreateUserBody, validateUpdateUserBody } = require('./validation/user');
+const scrape = require('website-scraper');
+const rimraf = require("rimraf");
+const HTMLParser = require('node-html-parser');
+
 
 const { sanitize } = utils;
 const { ApplicationError, ValidationError, NotFoundError } = utils.errors;
@@ -33,7 +37,31 @@ module.exports = {
 
     await validateCreateUserBody(ctx.request.body);
 
-    const { email, username, role } = ctx.request.body;
+    const { email, username, role, toptalAlias } = ctx.request.body;
+
+    const scrapedPage = await scrape({
+      urls: [`https://www.toptal.com/resume/${toptalAlias}`],
+      directory: '../temp'
+    })
+
+    const root = HTMLParser.parse(scrapedPage[0].text);
+    const htmlElements = root.querySelectorAll(".js-technologies");
+
+    rimraf("../temp", function () {
+      console.log(' temp directory deleted');
+    });
+
+    let skills = [];
+
+    htmlElements
+      .map(e => e.text.substring('Technologies: '.length).split(','))
+      .forEach(setOfSkills => {
+        setOfSkills.forEach(skill => {
+          skills.push(skill.trim());
+        })
+      })
+
+    console.log('skills', skills);
 
     const userWithSameUsername = await strapi
       .query('plugin::users-permissions.user')
@@ -69,6 +97,37 @@ module.exports = {
 
     try {
       const data = await getService('user').add(user);
+      const skillService = await getService('api::skill.skill');
+
+      console.log(data);
+      const skillsData = await Promise.all(_.uniq(skills).
+        map(async name => {
+        const existingSkill = await strapi.db.query('api::skill.skill')
+          .findOne({ // uid syntax: 'api::api-name.content-type-name'
+            where: {
+              name,
+            },
+            populate: {
+              users: true,
+            },
+        });
+
+        let skillBody;
+
+        if (existingSkill) {
+          skillBody = existingSkill;
+          skillBody.users.push(data);
+          return getService('api::skill.skill').update(skillBody);
+        }
+
+        skillBody = {
+          name,
+          users: [data]
+        };
+
+        return getService('api::skill.skill').create(skillBody);
+      }));
+
       const sanitizedData = await sanitizeOutput(data, ctx);
 
       ctx.created(sanitizedData);
diff --git a/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js b/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js
index a6be6d5..d695f60 100644
--- a/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js
+++ b/node_modules/@strapi/plugin-users-permissions/server/services/providers-registry.js
@@ -49,15 +49,19 @@ const getInitialProviders = ({ purest }) => ({
   async google({ accessToken }) {
     const google = purest({ provider: 'google' });
 
+    console.log("bam")
     return google
-      .query('oauth')
-      .get('tokeninfo')
-      .qs({ accessToken })
+      .get('oauth2/v2/userinfo')
+      .qs({ access_token: accessToken })
       .request()
-      .then(({ body }) => ({
-        username: body.email.split('@')[0],
-        email: body.email,
-      }));
+      .then(({body}) => {
+        return ({
+          username: body.email.split('@')[0],
+          email: body.email,
+          name: body.name,
+          picture: body.picture
+        })
+      }).catch(e => console.log(e));
   },
   async github({ accessToken }) {
     const github = purest({
